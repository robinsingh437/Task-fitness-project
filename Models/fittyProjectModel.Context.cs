//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FittyProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class fitnessProjectEntities : DbContext
    {
        public fitnessProjectEntities()
            : base("name=fitnessProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<sportswear> sportswears { get; set; }
        public virtual DbSet<gear> gears { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
    
        public virtual int cart_insert(string status, Nullable<int> itemId, string userId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cart_insert", statusParameter, itemIdParameter, userIdParameter);
        }
    
        public virtual int items_insert(Nullable<decimal> price, string size, string itemDescription, Nullable<int> quantity)
        {
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("itemDescription", itemDescription) :
                new ObjectParameter("itemDescription", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("items_insert", priceParameter, sizeParameter, itemDescriptionParameter, quantityParameter);
        }
    
        public virtual int order_insert(Nullable<int> orderId, string shippingAddress, string paymentMethod, Nullable<decimal> amount, string userId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("shippingAddress", shippingAddress) :
                new ObjectParameter("shippingAddress", typeof(string));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("paymentMethod", paymentMethod) :
                new ObjectParameter("paymentMethod", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_insert", orderIdParameter, shippingAddressParameter, paymentMethodParameter, amountParameter, userIdParameter);
        }
    
        public virtual int user_insert(string userId, string pass, string firstName, string lastName, string gender, string emailId, string phoneNumber, string address, string city, string country)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("user_insert", userIdParameter, passParameter, firstNameParameter, lastNameParameter, genderParameter, emailIdParameter, phoneNumberParameter, addressParameter, cityParameter, countryParameter);
        }
    
        public virtual ObjectResult<user_login_Result> user_login(string user_id, string user_password)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<user_login_Result>("user_login", user_idParameter, user_passwordParameter);
        }
    
        public virtual ObjectResult<display_items_Result> display_items()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<display_items_Result>("display_items");
        }
    
        public virtual int insert_gear(string type, string itemDescription, Nullable<decimal> price, string imageUrl, Nullable<int> quantity)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("itemDescription", itemDescription) :
                new ObjectParameter("itemDescription", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_gear", typeParameter, itemDescriptionParameter, priceParameter, imageUrlParameter, quantityParameter);
        }
    
        public virtual int insert_sportswear(string gender, string type, string size, string itemDescription, Nullable<decimal> price, string imageUrl, Nullable<int> quantity)
        {
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("itemDescription", itemDescription) :
                new ObjectParameter("itemDescription", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_sportswear", genderParameter, typeParameter, sizeParameter, itemDescriptionParameter, priceParameter, imageUrlParameter, quantityParameter);
        }
    
        public virtual int update_gear(Nullable<int> itemId, string type, string itemDescription, Nullable<decimal> price, string imageUrl, Nullable<int> quantity)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("itemDescription", itemDescription) :
                new ObjectParameter("itemDescription", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_gear", itemIdParameter, typeParameter, itemDescriptionParameter, priceParameter, imageUrlParameter, quantityParameter);
        }
    
        public virtual int update_sportswear(Nullable<int> itemId, string gender, string size, string type, string itemDescription, Nullable<decimal> price, string imageUrl, Nullable<int> quantity)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("itemDescription", itemDescription) :
                new ObjectParameter("itemDescription", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_sportswear", itemIdParameter, genderParameter, sizeParameter, typeParameter, itemDescriptionParameter, priceParameter, imageUrlParameter, quantityParameter);
        }
    
        public virtual ObjectResult<men_display_Result> men_display()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<men_display_Result>("men_display");
        }
    
        public virtual ObjectResult<women_display_Result> women_display()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<women_display_Result>("women_display");
        }
    
        public virtual int cart_insert1(Nullable<System.DateTime> date, Nullable<decimal> totalPrice, Nullable<int> quantity, Nullable<int> gearId, Nullable<int> sportsWearId, string userId)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var gearIdParameter = gearId.HasValue ?
                new ObjectParameter("gearId", gearId) :
                new ObjectParameter("gearId", typeof(int));
    
            var sportsWearIdParameter = sportsWearId.HasValue ?
                new ObjectParameter("sportsWearId", sportsWearId) :
                new ObjectParameter("sportsWearId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cart_insert1", dateParameter, totalPriceParameter, quantityParameter, gearIdParameter, sportsWearIdParameter, userIdParameter);
        }
    
        public virtual int cart_insert2(Nullable<decimal> totalPrice, Nullable<int> quantity, Nullable<int> gearId, Nullable<int> sportsWearId, string userId)
        {
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var gearIdParameter = gearId.HasValue ?
                new ObjectParameter("gearId", gearId) :
                new ObjectParameter("gearId", typeof(int));
    
            var sportsWearIdParameter = sportsWearId.HasValue ?
                new ObjectParameter("sportsWearId", sportsWearId) :
                new ObjectParameter("sportsWearId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cart_insert2", totalPriceParameter, quantityParameter, gearIdParameter, sportsWearIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<cart_display_Result> cart_display(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cart_display_Result>("cart_display", userIdParameter);
        }
    
        public virtual int order_insert1(string shippingAddress, string paymentMethod, Nullable<decimal> amount, string userId, ObjectParameter oid)
        {
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("shippingAddress", shippingAddress) :
                new ObjectParameter("shippingAddress", typeof(string));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("paymentMethod", paymentMethod) :
                new ObjectParameter("paymentMethod", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_insert1", shippingAddressParameter, paymentMethodParameter, amountParameter, userIdParameter, oid);
        }
    
        public virtual int order_insert2(string shippingAddress, string paymentMethod, Nullable<decimal> amount, string userId, ObjectParameter oid)
        {
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("shippingAddress", shippingAddress) :
                new ObjectParameter("shippingAddress", typeof(string));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("paymentMethod", paymentMethod) :
                new ObjectParameter("paymentMethod", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_insert2", shippingAddressParameter, paymentMethodParameter, amountParameter, userIdParameter, oid);
        }
    
        public virtual ObjectResult<profile_display_Result> profile_display(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<profile_display_Result>("profile_display", userIdParameter);
        }
    }
}
